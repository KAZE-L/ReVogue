openapi: 3.0.3
info:
  title: Second-hand Clothing Trading Platform API
  version: 1.0.0
  description: RESTful API for e-commerce & AI chatbot functions

servers:
  - url: https://your-platform-api.com

paths:
  /api/auth/login:
    post:
      summary: User Login / Google OAuth
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  example: user@example.com
                password:
                  type: string
                  example: secret123
      responses:
        '200':
          description: Login successful

  /api/products:
    get:
      summary: Get product list (supports search, filter)
      parameters:
        - name: category
          in: query
          schema:
            type: string
            example: tops
        - name: keyword
          in: query
          schema:
            type: string
            example: vintage
      responses:
        '200':
          description: List of products
    post:
      summary: Upload new product (Seller)
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                name:
                  type: string
                  example: Oversized Denim Jacket
                price:
                  type: number
                  example: 45.99
                description:
                  type: string
                  example: Lightly worn oversized denim jacket, great for casual wear.
                category:
                  type: string
                  example: outerwear
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Product created

  /api/products/{id}:
    get:
      summary: Get product details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: 123abc
      responses:
        '200':
          description: Product detail returned

  /api/cart:
    post:
      summary: Add product to cart
      requestBody:
        content:
          application/json:
            schema:
              properties:
                productId:
                  type: string
                  example: 123abc
                quantity:
                  type: integer
                  example: 2
      responses:
        '200':
          description: Product added to cart

  /api/order:
    post:
      summary: Create new order
      requestBody:
        content:
          application/json:
            schema:
              properties:
                cartItems:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: string
                        example: 123abc
                      quantity:
                        type: integer
                        example: 1
                paymentMethod:
                  type: string
                  example: credit_card
      responses:
        '201':
          description: Order created

  /api/search:
    get:
      summary: Search products by text (ElasticSearch)
      parameters:
        - name: query
          in: query
          schema:
            type: string
            example: floral dress
      responses:
        '200':
          description: Search results returned

  /api/chat:
    post:
      summary: Chatbot interaction (LLM)
      requestBody:
        content:
          application/json:
            schema:
              properties:
                message:
                  type: string
                  example: Show me casual jackets for spring.
      responses:
        '200':
          description: Chatbot response returned

  /api/style-detect:
    post:
      summary: AI style detection (image)
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  type: string
                  format: binary
                  example: image_file.jpg
      responses:
        '200':
          description: Style detection result

  /api/closet:
    get:
      summary: Get user's personal closet / favorites
      responses:
        '200':
          description: Closet data returned 